#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <ctime>
#include <cstring>
#include <cassert>
#include <bitset>
#include <sstream>
#include <queue>

#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define sz(a) ((int) (a).size())
#define eprintf(...) fprintf(stderr, __VA_ARGS__)

using namespace std;

typedef long long int64;
typedef long double ldb;

const long double eps = 1e-9;
const int inf = (1 << 30) - 1;
const long long inf64 = ((long long)1 << 62) - 1;
const long double pi = acos(-1);

template <class T> T sqr (T x) {return x * x;}
template <class T> T abs (T x) {return x < 0 ? -x : x;}

const int MAXN = 250 * 1000;

char s1[MAXN], s2[MAXN];
int num1[2][30], num2[2][30];

int main () {
//  ios_base::sync_with_stdio(0);
//  freopen("input.txt", "rt", stdin);
//  freopen("output.txt", "wt", stdout);

    scanf ("%s", s1);
    scanf ("%s", s2);

    for (int i = 0; s1[i] != 0; ++i) {
        if (s1[i] >= 'a' && s1[i] <= 'z') {
            num1[0][s1[i] - 'a']++;
        } else {
            num1[1][s1[i] - 'A']++;
        }
    }

    for (int i = 0; s2[i] != 0; ++i) {
        if (s2[i] >= 'a' && s2[i] <= 'z') {
            num2[0][s2[i] - 'a']++;
        } else {
            num2[1][s2[i] - 'A']++;
        }
    }

    int a = 0, b = 0;
    for (int i = 0; i < 26; ++i) {
        for (int t = 0; t < 2; ++t) {
            int tmp = min(num1[t][i], num2[t][i]);
            a += tmp;
            num1[t][i] -= tmp;
            num2[t][i] -= tmp;
        }

        b += min(num1[0][i], num2[1][i]) + min(num1[1][i], num2[0][i]);
    }

    cout << a << " " << b << endl;

    return 0;
}
